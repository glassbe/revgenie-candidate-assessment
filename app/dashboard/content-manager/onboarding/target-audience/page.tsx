"use client"

import type React from "react"

import { useState } from "react"
import { useRouter } from "next/navigation"
import { ArrowRight, Users, Building, Target, Check, ArrowLeft } from "lucide-react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Textarea } from "@/components/ui/textarea"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group"


export default function TargetAudiencePage() {
  const router = useRouter()
  const [isSubmitting, setIsSubmitting] = useState(false)

  // Pre-filled data that appears to have been generated by AI
  const [formData, setFormData] = useState({
    industry: "Software & Technology",
    audience:
      "Small to medium-sized businesses (10-500 employees) in the technology sector, particularly SaaS companies and digital agencies looking to scale their operations and improve marketing efficiency.",
    painPoints: [
      "Difficulty generating high-quality leads consistently",
      "Struggle to demonstrate ROI from marketing efforts",
      "Limited resources for content creation and distribution",
    ],
  })

  const handleIndustryChange = (value: string) => {
    setFormData({
      ...formData,
      industry: value,
    })
  }

  const handleAudienceChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {
    setFormData({
      ...formData,
      audience: e.target.value,
    })
  }

  const handlePainPointChange = (index: number, value: string) => {
    const newPainPoints = [...formData.painPoints]
    newPainPoints[index] = value
    setFormData({
      ...formData,
      painPoints: newPainPoints,
    })
  }

  const handleAddPainPoint = () => {
    setFormData({
      ...formData,
      painPoints: [...formData.painPoints, ""],
    })
  }

  const handleRemovePainPoint = (index: number) => {
    const newPainPoints = [...formData.painPoints]
    newPainPoints.splice(index, 1)
    setFormData({
      ...formData,
      painPoints: newPainPoints,
    })
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    setIsSubmitting(true)

    // In a real app, you would save this data to your state management or API
    // Navigate to the content topics page
    setTimeout(() => {
      router.push("/dashboard/content-manager/onboarding/content-topics")
    }, 500)
  }

  const handleBack = () => {
    router.push("/dashboard/content-manager/onboarding/business-goal")
  }

  return (
    <>
      <div className="py-8">
        <div className="mb-8">
          <Button variant="ghost" onClick={handleBack} className="mb-4">
            <ArrowLeft className="mr-2 h-4 w-4" />
            Back
          </Button>

          <div className="flex items-center space-x-2 mb-2">
            <div className="bg-green-100 p-1.5 rounded-full">
              <Check className="h-4 w-4 text-green-600" />
            </div>
            <p className="text-sm text-green-600 font-medium">AI Analysis Complete</p>
          </div>

          <h1 className="text-2xl font-bold">Target Audience & Industry</h1>
          <p className="text-muted-foreground">
            We've analyzed your business goal and pre-filled this information. Please review and adjust if needed.
          </p>
        </div>

        <form onSubmit={handleSubmit} className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Building className="h-5 w-5 text-purple-500 mr-2" />
                Industry
              </CardTitle>
              <CardDescription>Select the industry your target audience belongs to</CardDescription>
            </CardHeader>
            <CardContent>
              <RadioGroup
                value={formData.industry}
                onValueChange={handleIndustryChange}
                className="grid grid-cols-2 gap-4"
              >
                <div>
                  <RadioGroupItem value="Software & Technology" id="tech" className="peer sr-only" />
                  <Label
                    htmlFor="tech"
                    className="flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-purple-500 [&:has([data-state=checked])]:border-purple-500"
                  >
                    <span className="mb-2">💻</span>
                    Software & Technology
                  </Label>
                </div>

                <div>
                  <RadioGroupItem value="Finance & Banking" id="finance" className="peer sr-only" />
                  <Label
                    htmlFor="finance"
                    className="flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-purple-500 [&:has([data-state=checked])]:border-purple-500"
                  >
                    <span className="mb-2">💰</span>
                    Finance & Banking
                  </Label>
                </div>

                <div>
                  <RadioGroupItem value="Healthcare & Medical" id="healthcare" className="peer sr-only" />
                  <Label
                    htmlFor="healthcare"
                    className="flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-purple-500 [&:has([data-state=checked])]:border-purple-500"
                  >
                    <span className="mb-2">🏥</span>
                    Healthcare & Medical
                  </Label>
                </div>

                <div>
                  <RadioGroupItem value="Education & E-learning" id="education" className="peer sr-only" />
                  <Label
                    htmlFor="education"
                    className="flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-purple-500 [&:has([data-state=checked])]:border-purple-500"
                  >
                    <span className="mb-2">🎓</span>
                    Education & E-learning
                  </Label>
                </div>
                
                <div>
                  <RadioGroupItem value="Retail & E-commerce" id="retail" className="peer sr-only" />
                  <Label
                    htmlFor="retail"
                    className="flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-purple-500 [&:has([data-state=checked])]:border-purple-500"
                  >
                    <span className="mb-2">🛍️</span>
                    Retail & E-commerce
                  </Label>
                </div>
                
                <div>
                  <RadioGroupItem value="Manufacturing" id="manufacturing" className="peer sr-only" />
                  <Label
                    htmlFor="manufacturing"
                    className="flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-purple-500 [&:has([data-state=checked])]:border-purple-500"
                  >
                    <span className="mb-2">🏭</span>
                    Manufacturing
                  </Label>
                </div>
                
                <div>
                  <RadioGroupItem value="Marketing & Advertising" id="marketing" className="peer sr-only" />
                  <Label
                    htmlFor="marketing"
                    className="flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-purple-500 [&:has([data-state=checked])]:border-purple-500"
                  >
                    <span className="mb-2">📢</span>
                    Marketing & Advertising
                  </Label>
                </div>
                
                <div>
                  <RadioGroupItem value="Other" id="other" className="peer sr-only" />
                  <Label
                    htmlFor="other"
                    className="flex flex-col items-center justify-between rounded-md border-2 border-muted bg-popover p-4 hover:bg-accent hover:text-accent-foreground peer-data-[state=checked]:border-purple-500 [&:has([data-state=checked])]:border-purple-500"
                  >
                    <span className="mb-2">🔄</span>
                    Other
                  </Label>
                </div>
              </RadioGroup>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Users className="h-5 w-5 text-purple-500 mr-2" />
                Target Audience
              </CardTitle>
              <CardDescription>Describe your ideal customers and target audience</CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-2">
                <Textarea
                  value={formData.audience}
                  onChange={handleAudienceChange}
                  className="min-h-[100px]"
                  placeholder="Describe your target audience in detail..."
                />
                <p className="text-xs text-muted-foreground">
                  Be specific about company size, industry, roles, and characteristics of your ideal customers.
                </p>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Target className="h-5 w-5 text-purple-500 mr-2" />
                Pain Point Identification
              </CardTitle>
              <CardDescription>
                What problems does your target audience face that your content can help solve?
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {formData.painPoints.map((painPoint, index) => (
                  <div key={index} className="flex gap-2">
                    <Input
                      value={painPoint}
                      onChange={(e) => handlePainPointChange(index, e.target.value)}
                      placeholder="Describe a pain point..."
                      className="flex-1"
                    />
                    {formData.painPoints.length > 1 && (
                      <Button type="button" variant="outline" size="icon" onClick={() => handleRemovePainPoint(index)}>
                        <span className="sr-only">Remove</span>
                        <span aria-hidden="true">×</span>
                      </Button>
                    )}
                  </div>
                ))}

                {formData.painPoints.length < 5 && (
                  <Button type="button" variant="outline" onClick={handleAddPainPoint} className="w-full">
                    Add Another Pain Point
                  </Button>
                )}

                <p className="text-xs text-muted-foreground">
                  Identifying pain points helps us create content that resonates with your audience's needs.
                </p>
              </div>
            </CardContent>
          </Card>

          <div className="pt-4">
            <Button type="submit" className="w-full" disabled={isSubmitting}>
              {isSubmitting ? "Processing..." : "Continue to Content Topics"}
              <ArrowRight className="ml-2 h-4 w-4" />
            </Button>
          </div>
        </form>
      </div>
    </>
  )
}
